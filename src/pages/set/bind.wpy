<style lang="less">
.bind{
    font-size: 30rpx;
    .btn_wrap{
        margin: 40rpx 24rpx 0;
    }
    .sms_btn{
        border-radius: 8rpx;
        line-height: 46rpx;
        font-size: 24rpx;
        padding: 0 16rpx;
    }
    .tips{
      text-align: center;
    }
}
</style>
<template>
  <view class="container bind">
    <view wx:if="{{oldPhone}}" class="tips mt24">当前账号已绑定手机{{oldPhone}}</view>
    <view class="weui-ceils bgwhite mt24">
      <view class="weui-cell">
        <view class="weui-cell__bd"><input type="number" @input="phoneInput" value="{{phone}}" placeholder="请输入手机号"/></view>
        <view class="weui-cell__ft"></view>
      </view>
      <view class="weui-cell">
        <view class="weui-cell__bd"><input type="number" @input="codeInput" value="{{code}}" placeholder="请输入验证码" /></view>
        <view class="weui-cell__ft"><button class="sbtn sbtn_outline sms_btn" @tap="getCode"  disabled="{{disabled}}">{{text}}</button></view>
      </view>
    </view>
    <view class="btn_wrap">
       <view class="sbtn sbtn_default" @tap="bind">确定</view> 
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '../../interfaces/api'
  export default class Bind extends wepy.page {
    config = {
      navigationBarTitleText: '绑定手机号'
    }
    data = {
      phone:'',
      text:'获取验证码',
      disabled: false,
      code: '',
      myInfo:null,
      oldPhone:'',
      next:false
    }

    methods = {
      phoneInput(e) {
        this.phone = e.detail.value
      },
      codeInput(e) {
        this.code = e.detail.value
      },
      // 验证码
      async getCode() {
        if(!(/^1[3456789]\d{9}$/.test(this.phone))){
          wepy.showModal({
            content: '请输入正确的手机号',
            title: '提示'
          })
          return false;
        }
        // 获取验证码
        let data = {}
        if(this.oldPhone){
          data = await api.getEditSms({
            newphone:this.phone
          })
        }else{
          data = await api.getSms({
            mobilephone:this.phone
          })
        }

        if(data.code == 200){
          wepy.showToast({
            title: '验证码已发送'
          })
          this.disabled = true
          this.text = '60s后获取'
          let second = 60
          let timer = setInterval(()=>{
            second = second - 1
            this.text = `${second}s后获取`
            if(second==0){
              this.text = '获取验证码'
              this.disabled = false
              clearInterval(timer)
            }
            this.$apply()
          },1000)
        }else{
          wepy.showModal({
            title:'提示',
            content: data.message
          })
        }
      },
      // 绑定
      async bind() {
        if(!(/^1[3456789]\d{9}$/.test(this.phone))){
          wepy.showModal({
            content: '请输入正确的手机号',
            title: '提示'
          })
          return false;
        }
        if(!this.code){
          wepy.showModal({
            content: '请填写短信验证码',
            title: '提示'
          })
          return false;
        }
        let data = {}
        if(this.oldPhone){
          data = await api.editBind({
            newphone:this.phone,
            newcode: this.code
          })
        }else{
          data = await api.bind({
            mobilephone:this.phone,
            code: this.code
          })
        }

        if(data.code==200){
          await wepy.showToast({
            title: '绑定成功',
          })
          setTimeout(() => {
            wepy.navigateBack()
          }, 800);
          
        }else{
          wepy.showModal({
            title: '提示',
            content: data.message
          })
        }
        
      },
    }

    async onLoad() {
      const myInfo = await api.getPersonalInfo()
      this.myInfo = myInfo.data
      if(myInfo.data.mobilephone){
        this.oldPhone = myInfo.data.mobilephone.slice(0,3) + '****' + myInfo.data.mobilephone.slice(7,11)
        await wepy.setNavigationBarTitle({
          title: '修改绑定手机'
        })
      }
      this.$apply()
    }
  }
</script>
