<style lang="less">
@import "../../style/evlist.less";
.time{
  color: #6e6e6e!important;
}
.data{
  background: #dd4e32;
  color: #f9b3a5;
  text-align: center;
  .tips_text{
    font-size: 28rpx;
  }
  .value{
    color: #fff;
  }
  .total{
    font-size: 42rpx;
  }
  .flex_row{
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 24rpx 110rpx;
    .flex_item{
      flex:1;
    }
  }
}
.navs{
    background: #fff;
    padding: 20rpx 30rpx;
    .sbtn{
        font-size: 26rpx;
        line-height: 1;
        border-radius: 8rpx;
        background: #ffd1c8;
        color: #575757;
        padding:10rpx 20rpx; 
        margin-right: 30rpx;
        &.selected{
            background: #dd4e32;
            color: #fff;
        }
        &.query_btn{
            background: #fff;
            color: #32bee1;
            border: 1px solid #32bee1;
            padding: 5rpx 20rpx;
            &.selected{
                background: #32bee1;
                color: #fff;
            }
        }
    }
}
</style>
<template>
  <view class="container evaluate">
    <view class="data">
      <view>
        <view class="tips_text" style="padding-top:20rpx;">收入总额(元)</view>
        <view class="value total" style="margin-bottom:20rpx;">{{mydata.total||0}}</view>
      </view>
      <view class="flex_row">
        <view class="flex_item">
          <view class="tips_text">账户余额(元)</view>
          <view class="value">{{mydata.rest||0}}</view>
        </view>
        <view class="flex_item">
          <view class="tips_text">已提现(元)</view>
          <view class="value">{{mydata.transfered||0}}</view>
        </view>
      </view>
    </view>
    <view class="navs" style="border-bottom:1px solid #f1f1f1;">
        <text class="">查询：</text>
        <text @tap="query('yesterday','昨日')" class="sbtn query_btn {{query=='yesterday'?'selected':''}}">昨日</text>
        <text @tap="query('last_week','最近一周')" class="sbtn query_btn {{query=='last_week'?'selected':''}}">最近一周</text>
        <text @tap="query('last_month','最近一月')" class="sbtn query_btn {{query=='last_month'?'selected':''}}">最近一月</text>
    </view>
    <view class="query mt24">
        <view>
            <picker mode="date" value="{{date}}"  @change="DateChange">
                <view class="value">{{date}}</view>
                <view class="text">日期可选</view>
            </picker>
        </view>
        <view>
            <view class="value light">{{list.total||0}}</view>
            <view class="text">金额(元)</view>
        </view>
        <view>
            <view class="value">{{list.count||0}}</view>
            <view class="text">次数</view>
        </view>
    </view>
    <view class="weui-ceils bgwhite">
      <view class="weui-cell evaluate_ceil" wx:for="{{list.list}}" wx:key="item_{{index}}">
        <view class="weui-cell__ft avatar_wrap">
            <image src="{{item.headimgurl||'../../images/avatar.png'}}" class="avatar"></image>
        </view>
        <view class="weui-cell__bd">
            <view class="info_box">
                <view class="info_left">
                    <view wx:if="{{role!='agent'}}" class="name oneTextHide">打赏-来自 {{item.nickName||'热心用户'}}</view>
                    <view wx:if="{{role=='agent'}}" class="name oneTextHide">分佣-来自 {{item.merchant_name}}</view>
                    <view class="sign oneTextHide time">{{item.day}}</view>
                </view>
                <view class="info_right">+{{item.amount||item.profit}}</view>
            </view>
        </view>
      </view>
    </view>
    <view class="float"></view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '../../interfaces/api'
  import _ from '../../utils/tools'
  export default class Profit extends wepy.page {
    config = {
      navigationBarTitleText: '我的收益'
    }
    components = {
    }


    data = {
      mydata:null,
      list:null,
      date:'',
      role:'',
      query:'',
    }



    methods = {
      async DateChange(e) {
        this.date = e.detail.value
        this.query = e.detail.value
        this.$apply()
        await this.getList()
      },
      async query(type,text){
          this.date = text
          this.query = type
          this.$apply()
          if(this.role=='merchant'){
              await this.getStaffList()
          }else{
              await this.getList()
          }
      }
    }

    async onLoad() {
        this.date = _.getToday()
        this.query = _.getToday()
        const data = await api.profitData()
        this.role = await wepy.getStorageSync('type')
        if(this.role=='merchant'){
          await wepy.setNavigationBarTitle({
            title: '门店收益'
          })
        }
        if(data.code==200){
            this.mydata = data.data
        }
        this.$apply()
        await this.getList()
    }
    async getList(){
        const list = await api.profitList({
            day:this.query
        })
        if(list.code==200){
            this.list = list.data
        }
        this.$apply()
    }
  }
</script>
